plugins {
	id 'org.springframework.boot' version '2.3.0.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id "com.moowork.node" version "1.3.1"
}

node{
	version = '12.16.2'
	npmVersion = '6.14.4'
	workDir = file("./src/frontend")
	npmWorkDir = file('./src/frontend')
	nodeModulesDir = file("./src/frontend")
}

group = 'com.inzent'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.3'
	compileOnly 'org.projectlombok:lombok'
	compile group: 'org.modelmapper', name: 'modelmapper', version: '2.3.5'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	implementation 'io.jsonwebtoken:jjwt-api:0.10.7'
	runtime 'io.jsonwebtoken:jjwt-impl:0.10.7'
	runtime 'io.jsonwebtoken:jjwt-jackson:0.10.7'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	// compile group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'
	
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.security:spring-security-test'
}

task setUp(type: NpmTask){
	description = "Install Node.js packages"
	args = ['install']
	inputs.files file('package.json')
	outputs.files file('node_modules')
}

task buildFrontEnd(type: NpmTask, dependsOn: setUp){
	description = "Build vue.js"
	args = ['run', 'build']
}

processResources.dependsOn 'buildFrontEnd'

test {
	useJUnitPlatform()
}
