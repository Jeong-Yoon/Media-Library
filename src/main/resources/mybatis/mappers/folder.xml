<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="folder">

	<select id="getfoldersbyparent">
		<![CDATA[
			select * 
			from folders
			where folder_parent = #{id}
		]]>
	</select>

	<select id="chkfolderid" parameterType="long" resultType="int">
		<![CDATA[
			select count(*) 
			from folders_users_info
			where folder_id = #{folder_id}
		]]>
	</select>

	<insert id="addfolder" parameterType="addfolderdto">
		insert into folders
		(folder_id, folder_name, folder_path, folder_parent, folder_reg_user, folder_update_user)
		values
		(NEXTVAL('seq_folder'),	#{newFolderName}, #{path}, #{parent}, #{reg_user}, #{update_user})
	</insert>
	
<!-- 	<insert id="addfolder" parameterType="addfolderdto">
	with ins1 as(
	insert into ml_schema.folders(folder_id, folder_name, folder_path,
	folder_parent, folder_reg_user,
	folder_update_user)
	values
	(NEXTVAL('ml_schema.seq_folder'), '폴더111111', '/폴더111111', 20000, 10036, 10036)
	returning folder_id, folder_reg_user
	)
	insert into ml_schema.folders_users_info
	(user_id, folder_id)
	values
	((select folder_reg_user from ins1),(select folder_id from ins1))
	</insert> -->
	
	<insert id="addfolderuser">
		<![CDATA[
			insert into folders_users_info
			(user_id, folder_id, folder_master_type)
			values
			(#{user_id}, #{folder_id}, #{master_type}) 
		]]>
	</insert>
	
	<select id="getfolderlistbyparentid" parameterType="long" resultType="foldervo">
		<![CDATA[
			select * 
			from folders
			where folder_parent = #{id}
		]]>
	</select>
	
	<update id="changefoldername" parameterType="foldernamedto">
		<![CDATA[
			update folders
			set 
			folder_name = #{change_name},
			folder_update_user = #{update_user},
			folder_update_date = DEFAULT
			where folder_id = #{folder_id}
		]]>
	</update>
	
	<select id="getfolderidbyuserid" parameterType="long" resultType="long">
		<![CDATA[
			select folder_id
			from folders
			where folder_reg_user = #{user_id}
			and folder_parent is null
		]]>
	</select>
	
	<insert id="createrootfolder">
		<![CDATA[
			insert into folders 
            (folder_id, folder_name, folder_path, folder_parent, folder_reg_user, folder_update_user) 
			values
			(NEXTVAL('seq_folder'), '개인 문서함' , '/' , null, #{user_id}, #{user_id})
			RETURNING folder_id
		]]>
	</insert>
	
	<select id="getfolderpathbyid" parameterType="long" resultType="string">
		<![CDATA[
			select folder_path 
			from folders
			where folder_id = #{parent}
		]]>
	</select>

	<update id="deletefolder" parameterType="long">
		update folders
		set folder_delete = 'Y'
		where folder_id = #{folderId}
	</update>
	
	<resultMap type="string" id="contentdetaildtoresult">
		<result property="info" column="info" typeHandler="com.inzent.medialibrary.utils.JSONTypeHandler"/>
	</resultMap>
	
	<select id="getchildren" parameterType="long" resultType="string">
		select row_to_json(info) as info
		from (select "folder_id" id, "folder_name" folder_name, "folder_path" path,
		"user_name" reg_user, "folder_parent" parent, "folder_reg_date"
		reg_date
		from ml_schema.folders f, ml_schema.users u
		where f.folder_reg_user = u.user_id and folder_parent = #{id}
		and f.folder_delete = 'N'
		order by id, folder_reg_date ) info
		union all
		select row_to_json(info)as info
		from (select c.content_id as id, "content_type" content_type,
		"content_origin_name" content_name, "content_save_name" save_name,
		"content_storage" content_storage, "content_size" content_size,
		"content_reg_date" reg_date, "user_name" reg_user , "content_attribute"
		content_attribute
		from ml_schema.contents c, ml_schema.users u, ml_schema.contents_details cd
		where c.content_reg_user = u.user_id and c.content_id = cd.content_id
		and c.content_delete = 'N'
		and folder_id = #{id}) info;
	</select>
</mapper>